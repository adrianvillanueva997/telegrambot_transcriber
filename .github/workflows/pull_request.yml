name: Pull Request CI

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]

jobs:
  audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Check out code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Set up Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true
      - name: Install audit
        run: cargo install cargo-audit
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: Run audit
        run: just audit
  Docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Set up CD
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - name: Cache Docker layers
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.architectures }}
          push: false
  Clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Check out code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Set up Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: Run clippy
        run: just clippy
  Hadolint:
    runs-on: ubuntu-latest
    container: hadolint/hadolint:latest-alpine@sha256:e6f3fb90751bd85e53e4f0b758fbd77bce25833c80d9dcdb49aabc5ee39ff018
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Check out code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Install Just
        run: apk add --no-cache just
      - name: Run Hadolint
        run: just hadolint
  Machete:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Check out code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Set up Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true
      - name: Machete
        uses: bnjbvr/cargo-machete@main
  Tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Check out code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Set up Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: Setup nextest
        uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
      - name: List tests
        run: cargo nextest list
      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install ffmpeg -y
      - name: Run tests
        run: just test
